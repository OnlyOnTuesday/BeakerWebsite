class Ball {
    constructor(elem, startX, startY){
	this.elem = elem;
	this.x = startX;
	this.y = startY;

	//0=right, 1=left
	this.xDirection = 0;

	//0=down, 1=up
	this.yDirection = 0;
    }

    move(){
	if (this.xDirection == 0){
	    if (this.yDirection == 0){
		//down and to the right
		this.x += 10;
		this.y += 10;
	    } else {
		//down and to the left
		this.x -= 10;
		this.y += 10;
	    }
	} else {
	    if (this.yDirection == 0){
		//up and to the right
		this.x += 10;
		this.y -= 10;
	    } else {
		//up and to the left
		this.x -= 10;
		this.y -= 10;
	    }
	}
    }
}

function start(){
    ///This will hold a game loop that calls the event listeners and keeps the
    ///game going
    var lost = false;

    ///Variables to manipulate html elements
    var bar = document.getElementById("bar");
    var barPos = Number(bar.style.left[0] + bar.style.left[1] + bar.style.left[2]);
    var ball = document.getElementById("ball");
    var ballPos = Number(ball.style.top[0] + ball.style.top[1] + ball.style.top[2]);

    ///Allow the user to control the bar
    window.addEventListener("keydown", function(e){
	if (e.keyCode == "37"){
	    //left arrow key
	    if (barPos >= 10){
		barPos -= 10;
		bar.style.left = barPos + "px";
	    }
	}
	
	if (e.keyCode == "39"){
	    //right arrow key
	    if (barPos <= 290){
		barPos += 10;
		bar.style.left = barPos + "px";
	    }
	}
    });

    ///Allow the ball to fall, 300 milliseconds seems like a comfortable speed
    const bottom = 380;
    var iv = setInterval(function() {
	ballPos += 10;
	ball.style.top = ballPos + "px";
	console.log(ballPos);
	if (ballPos >= bottom){
	    console.log("Interval Cleared");
	    clearInterval(iv);
	}
    }, 300);
    

    //while not lost:
    //ball drops down
    //if ball hits bar:
    //ball bounces up, else
    //ball stops and game is over
}




//Move the ball falling to a function (maybe have the setInterval be external?)
//put in while loop: while not lost: have ball drop and let --
//maybe I can use the setInterval instead of a while loop, and just have a bunch of
//conditions for lost in the if statement that clear the interval
//what conditions: if ballPos is 0 and not hitting bar, if no more bars to hit
//*****************************************************************************

//TODO: Add start button, have ball drop when clicked
//      If ball hits bar, have bounce off at angle
//      If ball hits side, have bounce off at angle
//      If divs affect position of bar and ball, how will blocks effect?
//         Will those dives still be there, and if yes how will it move past them?

/*
Plan:
When the user clicks start the ball needs to drop straight down.
The game needs to know if the ball hits the bar

If it does not:
    The game needs to end
If it does:
    It needs to bounce off the bar
    For now: just bounce straight back up

*/
